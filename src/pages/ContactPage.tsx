import React, { useState } from 'react';
import { Section, Container, Card, Badge, Button } from '../components/ui';

const ContactPage = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    company: '',
    phone: '',
    service: '',
    budget: '',
    message: '',
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    // Simulate API call
    setTimeout(() => {
      setIsSubmitting(false);
      setSubmitStatus('success');
      setFormData({
        name: '',
        email: '',
        company: '',
        phone: '',
        service: '',
        budget: '',
        message: '',
      });

      // Reset success message after 5s
      setTimeout(() => setSubmitStatus('idle'), 5000);
    }, 2000);
  };

  const contactInfo = [
    {
      icon: 'üìß',
      title: 'Email',
      value: 'hello@connectus.com',
      link: 'mailto:hello@connectus.com',
    },
    {
      icon: 'üìû',
      title: 'ƒêi·ªán tho·∫°i',
      value: '+84 (28) 1234 5678',
      link: 'tel:+842812345678',
    },
    {
      icon: 'üìç',
      title: 'ƒê·ªãa ch·ªâ',
      value: '123 Nguy·ªÖn Hu·ªá, Q.1, TP.HCM',
      link: 'https://maps.google.com',
    },
    {
      icon: '‚è∞',
      title: 'Gi·ªù l√†m vi·ªác',
      value: 'T2 - T6: 9:00 - 18:00',
      link: null,
    },
  ];

  const services = [
    'Web Development',
    'Mobile Development',
    'Cloud & DevOps',
    'AI & Machine Learning',
    'UI/UX Design',
    'Tech Consulting',
    'Kh√°c',
  ];

  const budgetRanges = [
    'D∆∞·ªõi $5,000',
    '$5,000 - $15,000',
    '$15,000 - $50,000',
    'Tr√™n $50,000',
    'Ch∆∞a x√°c ƒë·ªãnh',
  ];

  return (
    <>
      {/* Hero Section */}
      <Section background="gradient" padding="lg" className="pt-32">
        <Container>
          <div className="max-w-4xl mx-auto text-center">
            <Badge variant="primary" size="lg" className="mb-6">
              Li√™n h·ªá
            </Badge>
            <h1 className="text-4xl lg:text-6xl font-bold text-neutral-900 mb-6">
              H√£y c√πng nhau t·∫°o ra{' '}
              <span className="gradient-fire">ƒëi·ªÅu tuy·ªát v·ªùi</span>
            </h1>
            <p className="text-xl text-neutral-600 leading-relaxed">
              Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† t∆∞ v·∫•n mi·ªÖn ph√≠ cho d·ª± √°n c·ªßa b·∫°n. H√£y chia s·∫ª √Ω t∆∞·ªüng v√† ƒë·ªÉ ch√∫ng t√¥i gi√∫p b·∫°n hi·ªán th·ª±c h√≥a n√≥.
            </p>
          </div>
        </Container>
      </Section>

      {/* Contact Form & Info */}
      <Section background="white" padding="lg">
        <Container size="xl">
          <div className="grid lg:grid-cols-5 gap-12">
            {/* Contact Info - Left Side */}
            <div className="lg:col-span-2 space-y-8">
              <div>
                <h2 className="text-3xl font-bold text-neutral-900 mb-4">
                  Th√¥ng tin li√™n h·ªá
                </h2>
                <p className="text-neutral-600 leading-relaxed">
                  ƒê·ª´ng ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i. Ch√∫ng t√¥i cam k·∫øt ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù.
                </p>
              </div>

              {/* Contact Cards */}
              <div className="space-y-4">
                {contactInfo.map((info, index) => (
                  <Card
                    key={index}
                    variant="bordered"
                    className="group hover:border-primary-300 transition-colors"
                  >
                    <div className="flex items-start gap-4">
                      <div className="w-12 h-12 rounded-lg bg-primary-100 flex items-center justify-center text-2xl flex-shrink-0 group-hover:scale-110 transition-transform">
                        {info.icon}
                      </div>
                      <div>
                        <h3 className="text-sm font-semibold text-neutral-900 mb-1">
                          {info.title}
                        </h3>
                        {info.link ? (
                          <a
                            href={info.link}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-neutral-600 hover:text-primary-600 transition-colors"
                          >
                            {info.value}
                          </a>
                        ) : (
                          <p className="text-neutral-600">{info.value}</p>
                        )}
                      </div>
                    </div>
                  </Card>
                ))}
              </div>

              {/* Social Links */}
              <div>
                <h3 className="text-lg font-semibold text-neutral-900 mb-4">
                  K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i
                </h3>
                <div className="flex items-center gap-3">
                  {[
                    { name: 'Facebook', icon: 'üìò', url: '#' },
                    { name: 'LinkedIn', icon: 'üíº', url: '#' },
                    { name: 'Twitter', icon: 'üê¶', url: '#' },
                    { name: 'GitHub', icon: 'üêô', url: '#' },
                  ].map((social) => (
                    <a
                      key={social.name}
                      href={social.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="w-12 h-12 rounded-lg bg-neutral-100 flex items-center justify-center text-2xl hover:bg-primary-100 transition-all duration-200 hover:scale-110"
                      aria-label={social.name}
                    >
                      {social.icon}
                    </a>
                  ))}
                </div>
              </div>

              {/* Benefits */}
              <Card variant="gradient" className="p-6">
                <h3 className="text-lg font-semibold text-neutral-900 mb-4">
                  T·∫°i sao ch·ªçn ch√∫ng t√¥i?
                </h3>
                <ul className="space-y-3">
                  {[
                    'T∆∞ v·∫•n mi·ªÖn ph√≠ kh√¥ng r√†ng bu·ªôc',
                    'Ph·∫£n h·ªìi trong 24 gi·ªù',
                    'ƒê·ªôi ng≈© chuy√™n gia 10+ nƒÉm kinh nghi·ªám',
                    'B√°o gi√° minh b·∫°ch, c·∫°nh tranh',
                  ].map((benefit, i) => (
                    <li key={i} className="flex items-start text-sm text-neutral-700">
                      <svg className="w-5 h-5 text-primary-600 mr-2 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                      </svg>
                      {benefit}
                    </li>
                  ))}
                </ul>
              </Card>
            </div>

            {/* Contact Form - Right Side */}
            <div className="lg:col-span-3">
              <Card variant="hover" className="p-8">
                <h2 className="text-2xl font-bold text-neutral-900 mb-6">
                  G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n
                </h2>

                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Name & Email */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <label htmlFor="name" className="block text-sm font-medium text-neutral-700 mb-2">
                        H·ªç v√† t√™n <span className="text-secondary-500">*</span>
                      </label>
                      <input
                        type="text"
                        id="name"
                        name="name"
                        value={formData.name}
                        onChange={handleChange}
                        required
                        className="input"
                        placeholder="Nguy·ªÖn VƒÉn A"
                      />
                    </div>

                    <div>
                      <label htmlFor="email" className="block text-sm font-medium text-neutral-700 mb-2">
                        Email <span className="text-secondary-500">*</span>
                      </label>
                      <input
                        type="email"
                        id="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        required
                        className="input"
                        placeholder="email@example.com"
                      />
                    </div>
                  </div>

                  {/* Company & Phone */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <label htmlFor="company" className="block text-sm font-medium text-neutral-700 mb-2">
                        C√¥ng ty
                      </label>
                      <input
                        type="text"
                        id="company"
                        name="company"
                        value={formData.company}
                        onChange={handleChange}
                        className="input"
                        placeholder="T√™n c√¥ng ty c·ªßa b·∫°n"
                      />
                    </div>

                    <div>
                      <label htmlFor="phone" className="block text-sm font-medium text-neutral-700 mb-2">
                        S·ªë ƒëi·ªán tho·∫°i
                      </label>
                      <input
                        type="tel"
                        id="phone"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                        className="input"
                        placeholder="+84 123 456 789"
                      />
                    </div>
                  </div>

                  {/* Service & Budget */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <label htmlFor="service" className="block text-sm font-medium text-neutral-700 mb-2">
                        D·ªãch v·ª• quan t√¢m <span className="text-secondary-500">*</span>
                      </label>
                      <select
                        id="service"
                        name="service"
                        value={formData.service}
                        onChange={handleChange}
                        required
                        className="input"
                      >
                        <option value="">Ch·ªçn d·ªãch v·ª•</option>
                        {services.map((service) => (
                          <option key={service} value={service}>
                            {service}
                          </option>
                        ))}
                      </select>
                    </div>

                    <div>
                      <label htmlFor="budget" className="block text-sm font-medium text-neutral-700 mb-2">
                        Ng√¢n s√°ch d·ª± ki·∫øn
                      </label>
                      <select
                        id="budget"
                        name="budget"
                        value={formData.budget}
                        onChange={handleChange}
                        className="input"
                      >
                        <option value="">Ch·ªçn m·ª©c ng√¢n s√°ch</option>
                        {budgetRanges.map((range) => (
                          <option key={range} value={range}>
                            {range}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>

                  {/* Message */}
                  <div>
                    <label htmlFor="message" className="block text-sm font-medium text-neutral-700 mb-2">
                      M√¥ t·∫£ d·ª± √°n <span className="text-secondary-500">*</span>
                    </label>
                    <textarea
                      id="message"
                      name="message"
                      value={formData.message}
                      onChange={handleChange}
                      required
                      rows={6}
                      className="input resize-none"
                      placeholder="H√£y chia s·∫ª chi ti·∫øt v·ªÅ d·ª± √°n c·ªßa b·∫°n, m·ª•c ti√™u, timeline v√† b·∫•t k·ª≥ y√™u c·∫ßu c·ª• th·ªÉ n√†o..."
                    />
                  </div>

                  {/* Submit Status */}
                  {submitStatus === 'success' && (
                    <div className="p-4 bg-success-100 border border-success-300 rounded-lg text-success-700 flex items-start gap-3">
                      <svg className="w-5 h-5 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                      </svg>
                      <div>
                        <p className="font-medium">C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá!</p>
                        <p className="text-sm mt-1">Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù.</p>
                      </div>
                    </div>
                  )}

                  {/* Submit Button */}
                  <Button
                    type="submit"
                    variant="primary"
                    size="lg"
                    disabled={isSubmitting}
                    className="w-full"
                  >
                    {isSubmitting ? (
                      <>
                        <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        ƒêang g·ª≠i...
                      </>
                    ) : (
                      'G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n'
                    )}
                  </Button>

                  <p className="text-xs text-neutral-500 text-center">
                    B·∫±ng c√°ch g·ª≠i form n√†y, b·∫°n ƒë·ªìng √Ω v·ªõi{' '}
                    <a href="/privacy" className="text-primary-600 hover:underline">
                      ch√≠nh s√°ch b·∫£o m·∫≠t
                    </a>{' '}
                    c·ªßa ch√∫ng t√¥i.
                  </p>
                </form>
              </Card>
            </div>
          </div>
        </Container>
      </Section>

      {/* Map Section */}
      <Section background="gray" padding="none">
        <div className="w-full h-96 bg-neutral-200 flex items-center justify-center">
          <div className="text-center">
            <div className="text-6xl mb-4">üó∫Ô∏è</div>
            <p className="text-neutral-600 text-lg font-medium">
              Google Maps Integration
            </p>
            <p className="text-neutral-500 text-sm mt-2">
              123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM
            </p>
          </div>
        </div>
      </Section>

      {/* FAQ Section */}
      <Section background="white" padding="lg">
        <Container size="md">
          <div className="text-center mb-12">
            <h2 className="text-3xl lg:text-4xl font-bold text-neutral-900 mb-4">
              C√¢u h·ªèi th∆∞·ªùng g·∫∑p
            </h2>
            <p className="text-neutral-600">
              Nh·ªØng c√¢u h·ªèi ph·ªï bi·∫øn nh·∫•t t·ª´ kh√°ch h√†ng
            </p>
          </div>

          <div className="space-y-4">
            {[
              {
                q: 'Th·ªùi gian tri·ªÉn khai d·ª± √°n th∆∞·ªùng m·∫•t bao l√¢u?',
                a: 'T√πy thu·ªôc v√†o quy m√¥ d·ª± √°n, th∆∞·ªùng t·ª´ 2-6 th√°ng. Ch√∫ng t√¥i s·∫Ω ƒë∆∞a ra timeline chi ti·∫øt sau khi ph√¢n t√≠ch y√™u c·∫ßu.',
              },
              {
                q: 'Chi ph√≠ d·ª± √°n ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o?',
                a: 'Ch√∫ng t√¥i b√°o gi√° d·ª±a tr√™n ph·∫°m vi c√¥ng vi·ªác, ƒë·ªô ph·ª©c t·∫°p v√† timeline. C√≥ 2 h√¨nh th·ª©c: fixed price ho·∫∑c time & material.',
              },
              {
                q: 'C√≥ h·ªó tr·ª£ sau khi b√†n giao kh√¥ng?',
                a: 'C√≥, ch√∫ng t√¥i cung c·∫•p g√≥i b·∫£o h√†nh v√† h·ªó tr·ª£ t·ª´ 3-12 th√°ng t√πy g√≥i d·ªãch v·ª• b·∫°n ch·ªçn.',
              },
              {
                q: 'L√†m vi·ªác t·ª´ xa c√≥ ƒë∆∞·ª£c kh√¥ng?',
                a: 'Ho√†n to√†n ƒë∆∞·ª£c! Ch√∫ng t√¥i c√≥ kinh nghi·ªám l√†m vi·ªác v·ªõi kh√°ch h√†ng to√†n c·∫ßu. Giao ti·∫øp qua Zoom, Slack ho·∫∑c email.',
              },
            ].map((faq, index) => (
              <Card
                key={index}
                variant="bordered"
                className="hover:border-primary-300 transition-colors"
              >
                <h3 className="text-lg font-semibold text-neutral-900 mb-2">
                  {faq.q}
                </h3>
                <p className="text-neutral-600 leading-relaxed">
                  {faq.a}
                </p>
              </Card>
            ))}
          </div>
        </Container>
      </Section>
    </>
  );
};

export default ContactPage;
